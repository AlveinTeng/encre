{
  "compilerOptions": {
    "target": "ESNEXT",
    "module": "ESNext",
    "lib": [
      "ESNext"
    ],
    "allowJs": true,
    "skipLibCheck": true,
    "declaration": true,
    "outDir": "./build",
    "rootDir": "./src",
    "strict": true,
    "forceConsistentCasingInFileNames": true,
    "noImplicitAny": false,
    "strictBindCallApply": false,
    "strictPropertyInitialization": false,
    "noImplicitThis": false,
    "moduleResolution": "node",
    "types": [
      "reflect-metadata",
      "node"
    ],
    "allowSyntheticDefaultImports": true,
    "esModuleInterop": true,
    "inlineSourceMap": true,
    "experimentalDecorators": true,
    "emitDecoratorMetadata": true
  },
  "include": [
    "src/**/*"
  ],
  "exclude": [
    "node_modules",
    "build"
  ],
  "typedocOptions": {
    "entryPoints": [
      "src/serde.ts",
      "src/load/index.ts",
      "src/load/serializable.ts",
      "src/record/index.ts",
      "src/cache/index.ts",
      "src/cache/base.ts",
      "src/cache/memory.ts",
      "src/events/index.ts",
      "src/events/base.ts",
      "src/events/embeddings/index.ts",
      "src/events/embeddings/base.ts",
      "src/events/embeddings/openai.ts",
      "src/events/input/load/docs/index.ts",
      "src/events/input/load/docs/base.ts",
      "src/events/input/load/docs/buffer.ts",
      "src/events/input/load/docs/context.ts",
      "src/events/input/load/docs/pdf.ts",
      "src/events/input/load/msgs/index.ts",
      "src/events/input/load/msgs/base.ts",
      "src/events/input/load/msgs/bot.ts",
      "src/events/input/load/msgs/human.ts",
      "src/events/input/load/msgs/system.ts",
      "src/events/input/load/msgs/function.ts",
      "src/events/input/load/msgs/chat.ts",
      "src/events/input/load/prompts/index.ts",
      "src/events/input/load/prompts/base.ts",
      "src/events/input/load/prompts/text.ts",
      "src/events/input/load/prompts/chat.ts",
      "src/events/input/load/rules/index.ts",
      "src/events/input/load/vectorstore/index.ts",
      "src/events/input/load/vectorstore/base.ts",
      "src/events/input/load/vectorstore/chroma.ts",
      "src/events/input/load/vectorstore/memory.ts",
      "src/events/input/transform/splitter.ts",
      "src/events/output/provide/index.ts",
      "src/events/output/provide/base.ts",
      "src/events/output/provide/embedresult.ts",
      "src/events/output/provide/file.ts",
      "src/events/output/provide/generation.ts",
      "src/events/output/provide/llmresult.ts",
      "src/events/output/provide/message.ts",
      "src/events/output/provide/serde.ts",
      "src/events/inference/validate/index.ts",
      "src/events/inference/validate/guardrails/index.ts",
      "src/events/inference/validate/guardrails/base.ts",
      "src/events/inference/validate/guardrails/array.ts",
      "src/events/inference/validate/guardrails/boolean.ts",
      "src/events/inference/validate/guardrails/object.ts",
      "src/events/inference/validate/guardrails/number.ts",
      "src/events/inference/validate/guardrails/string.ts",
      "src/events/inference/validate/validators/index.ts",
      "src/events/inference/chat/base.ts",
      "src/events/inference/chat/index.ts",
      "src/events/inference/chat/llms/openai/text.ts",
      "src/events/inference/chat/llms/openai/chat.ts",
      "src/events/inference/chat/llms/vertexai/index.ts",
      "src/events/inference/chat/llms/vertexai/gemini/text.ts",
      "src/events/inference/chat/llms/vertexai/gemini/chat.ts",
      "src/events/inference/retrieve/base.ts",
      "src/events/inference/retrieve/text/remote/base.ts",
      "src/events/inference/retrieve/text/remote/index.ts",
      "src/events/inference/retrieve/embedding/vectorstore.ts",
      "src/events/inference/retrieve/embedding/index.ts",
      "src/studio/condition.ts",
      "src/studio/graph.ts",
      "src/studio/input.ts",
      "src/utils/nanoid.ts"
    ]
  }
}
